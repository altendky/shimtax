[tool.poetry]
name = "shimtax"
version = "0"
description = "A pluggable manager for syntax rewriting codecs"
authors = ["Kyle Altendorf <sda@fstab.net>"]
license = "MIT-0"
readme = "README.rst"
keywords= ["codec", "plugin", "shim", "syntax"]
homepage = "https://github.com/altendky/shimtax/"
packages = [{include = "shimtax", from = "src"}]

[tool.poetry.scripts]
shimtax = "shimtax.cli:main"

[tool.poetry.urls]
"Source" = "https://github.com/altendky/shimtax/"

[tool.poetry.dependencies]
python = ">=3.7, <4"
attrs = ">=21.3.0"
click = "^8.1.3"
setuptools = ">=52"

black = { version = ">=22.8.0", optional = true }
coconut = { version = "^1.6.0", optional = true }
coverage = { version = "^6.4.4", optional = true }
cursed-for = { version = ">=0.3.0", optional = true }
isort = { version = ">=5.10.1", optional = true }
mypy = { version = ">=0.971", optional = true }
pytest = { version = "^7.1.3", optional = true }
pytest-cov = { version = "^3.0.0", optional = true }

[tool.poetry.extras]
checks = ["black", "isort", "mypy"]
coverage = ["coverage"]
dev = ["black", "coconut", "cursed-for", "isort", "mypy", "pytest", "pytest-cov"]
test = ["coconut", "cursed-for", "pytest", "pytest-cov"]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
dirty = true
pattern = "default-unprefixed"
format-jinja = "{% if distance == 0 %}{{ base }}{% else %}{{ base }}.dev{{ distance }}{% endif %}{% if dirty %}+dirty{% endif %}"
style = "pep440"
bump = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version =  ['py37', 'py38', 'py39', 'py310', 'py311']
include = '''
^/(
    [^/]*.py
    | (src)/.*\.pyi?
)$
'''
exclude = ''
